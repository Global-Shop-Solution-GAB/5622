Program.Sub.ScreenSU.Start
Gui.frmCompareCost..Create(BaseForm)
Gui.frmCompareCost..Size(15210,8520)
Gui.frmCompareCost..MinX(0)
Gui.frmCompareCost..MinY(0)
Gui.frmCompareCost..Position(0,0)
Gui.frmCompareCost..BackColor(-2147483633)
Gui.frmCompareCost..MousePointer(0)
Gui.frmCompareCost..Event(UnLoad,frmCompareCost_UnLoad)
Gui.frmCompareCost..Sizeable(False)
Gui.frmCompareCost..Caption("Compare Costs")
Gui.frmCompareCost..AlwaysOnTop(False)
Gui.frmCompareCost..FontName("Tahoma")
Gui.frmCompareCost..FontSize(8.25)
Gui.frmCompareCost..ControlBox(True)
Gui.frmCompareCost..MaxButton(True)
Gui.frmCompareCost..MinButton(True)
Gui.frmCompareCost..Moveable(True)
Gui.frmCompareCost..ShowInTaskBar(True)
Gui.frmCompareCost..TitleBar(True)
Gui.frmCompareCost.GsGridControl1.Create(GsGridControl)
Gui.frmCompareCost.GsGridControl1.Size(15135,7275)
Gui.frmCompareCost.GsGridControl1.Position(0,690)
Gui.frmCompareCost.GsGridControl1.Event(RowCellClick,GsGridControl1_RowCellClick1)
Gui.frmCompareCost.GsGridControl1.Enabled(True)
Gui.frmCompareCost.GsGridControl1.Visible(True)
Gui.frmCompareCost.GsGridControl1.Zorder(0)
Gui.frmCompareCost.GsGridControl1.Anchor(15)
Gui.frmCompareCost.GsGridControl1.Dock(0)
Gui.frmCompareCost.dtp1.Create(DatePicker)
Gui.frmCompareCost.dtp1.Size(1935,330)
Gui.frmCompareCost.dtp1.Position(105,360)
Gui.frmCompareCost.dtp1.TabStop(True)
Gui.frmCompareCost.dtp1.TabIndex(1)
Gui.frmCompareCost.dtp1.Enabled(True)
Gui.frmCompareCost.dtp1.Visible(True)
Gui.frmCompareCost.dtp1.Zorder(0)
Gui.frmCompareCost.dtp1.CheckBox(False)
Gui.frmCompareCost.dtp1.FontName("Tahoma")
Gui.frmCompareCost.dtp1.FontSize(8)
Gui.frmCompareCost.dtp1.Value(4/1/2022 1:11:04 PM)
Gui.frmCompareCost.lblEndDate.Create(Label,"End Date",True,810,240,0,2205,75,True,0,"Arial",8,-2147483633,0,0)
Gui.frmCompareCost.lblEndDate.BorderStyle(0)
Gui.frmCompareCost.dtp2.Create(DatePicker)
Gui.frmCompareCost.dtp2.Size(1935,330)
Gui.frmCompareCost.dtp2.Position(2205,360)
Gui.frmCompareCost.dtp2.TabStop(True)
Gui.frmCompareCost.dtp2.TabIndex(2)
Gui.frmCompareCost.dtp2.Enabled(True)
Gui.frmCompareCost.dtp2.Visible(True)
Gui.frmCompareCost.dtp2.Zorder(0)
Gui.frmCompareCost.dtp2.CheckBox(False)
Gui.frmCompareCost.dtp2.FontName("Tahoma")
Gui.frmCompareCost.dtp2.FontSize(8)
Gui.frmCompareCost.cmdLoadCompareCost.Create(Button)
Gui.frmCompareCost.cmdLoadCompareCost.Size(435,375)
Gui.frmCompareCost.cmdLoadCompareCost.Position(4305,270)
Gui.frmCompareCost.cmdLoadCompareCost.Caption("REFRESH")
Gui.frmCompareCost.cmdLoadCompareCost.Event(Click,cmdLoadCompareCost_Click)
Gui.frmCompareCost.cmdLoadCompareCost.TabStop(True)
Gui.frmCompareCost.cmdLoadCompareCost.TabIndex(3)
Gui.frmCompareCost.cmdLoadCompareCost.Enabled(True)
Gui.frmCompareCost.cmdLoadCompareCost.Visible(True)
Gui.frmCompareCost.cmdLoadCompareCost.Zorder(0)
Gui.frmCompareCost.cmdLoadCompareCost.FontName("Tahoma")
Gui.frmCompareCost.cmdLoadCompareCost.FontSize(8)
Gui.frmCompareCost.lblStartDate.Create(Label,"Start Date",True,870,240,0,120,75,True,0,"Tahoma",8,,0,0)
Gui.frmCompareCost.lblStartDate.BorderStyle(0)
Gui.frmReceiptView..Create(BaseForm)
Gui.frmReceiptView..Size(16140,10485)
Gui.frmReceiptView..MinX(0)
Gui.frmReceiptView..MinY(0)
Gui.frmReceiptView..Position(0,0)
Gui.frmReceiptView..BackColor(-2147483633)
Gui.frmReceiptView..MousePointer(0)
Gui.frmReceiptView..Caption("View Each Receipt")
Gui.frmReceiptView..Event(UnLoad,Form2_UnLoad)
Gui.frmReceiptView..AlwaysOnTop(False)
Gui.frmReceiptView..FontName("Tahoma")
Gui.frmReceiptView..FontSize(8.25)
Gui.frmReceiptView..ControlBox(True)
Gui.frmReceiptView..MaxButton(True)
Gui.frmReceiptView..MinButton(True)
Gui.frmReceiptView..Moveable(True)
Gui.frmReceiptView..Sizeable(True)
Gui.frmReceiptView..ShowInTaskBar(True)
Gui.frmReceiptView..TitleBar(True)
Gui.frmReceiptView.GsGridControl1.Create(GsGridControl)
Gui.frmReceiptView.GsGridControl1.Size(16050,9195)
Gui.frmReceiptView.GsGridControl1.Position(0,735)
Gui.frmReceiptView.GsGridControl1.Event(RowCellClick,GsGridControl1_RowCellClick1)
Gui.frmReceiptView.GsGridControl1.Enabled(True)
Gui.frmReceiptView.GsGridControl1.Visible(True)
Gui.frmReceiptView.GsGridControl1.Zorder(0)
Gui.frmReceiptView.GsGridControl1.Dock(0)
Gui.frmReceiptView.GsGridControl1.Anchor(15)
Gui.frmReceiptView.cmd1.Create(Button)
Gui.frmReceiptView.cmd1.Size(990,330)
Gui.frmReceiptView.cmd1.Position(2715,345)
Gui.frmReceiptView.cmd1.Caption("REFRESH")
Gui.frmReceiptView.cmd1.Event(Click,RefreshForm2)
Gui.frmReceiptView.cmd1.Enabled(True)
Gui.frmReceiptView.cmd1.Visible(True)
Gui.frmReceiptView.cmd1.Zorder(0)
Gui.frmReceiptView.cmd1.FontName("Tahoma")
Gui.frmReceiptView.cmd1.FontSize(7.8)
Gui.frmReceiptView.lblStart.Create(Label,"Start Date",True,885,240,0,105,75,True,0,"Arial",8,-2147483633,0,0)
Gui.frmReceiptView.lblStart.BorderStyle(0)
Gui.frmReceiptView.dtp1.Create(DatePicker)
Gui.frmReceiptView.dtp1.Size(1470,285)
Gui.frmReceiptView.dtp1.Position(1140,30)
Gui.frmReceiptView.dtp1.Enabled(False)
Gui.frmReceiptView.dtp1.Visible(True)
Gui.frmReceiptView.dtp1.Zorder(0)
Gui.frmReceiptView.dtp1.CheckBox(False)
Gui.frmReceiptView.dtp1.FontName("Tahoma")
Gui.frmReceiptView.dtp1.FontSize(7.8)
Gui.frmReceiptView.lblEnd.Create(Label,"End Date",True,810,240,0,105,420,True,0,"Arial",8,-2147483633,0,0)
Gui.frmReceiptView.lblEnd.BorderStyle(0)
Gui.frmReceiptView.dtp2.Create(DatePicker)
Gui.frmReceiptView.dtp2.Size(1470,285)
Gui.frmReceiptView.dtp2.Position(1140,390)
Gui.frmReceiptView.dtp2.Enabled(False)
Gui.frmReceiptView.dtp2.Visible(True)
Gui.frmReceiptView.dtp2.Zorder(0)
Gui.frmReceiptView.dtp2.CheckBox(False)
Gui.frmReceiptView.dtp2.FontName("Tahoma")
Gui.frmReceiptView.dtp2.FontSize(7.8)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.dStartDate.Declare
	V.Global.dEndDate.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
	V.Local.sIcon.Declare
	
	F.Intrinsic.String.Build("{0}\ART\gss2.ico", V.Caller.GlobalDir, V.Local.sIcon)
	Gui.frmCompareCost..Icon(V.Local.sIcon)
	
	F.ODBC.Connection!con.OpenCompanyConnection
'	F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)
	
	F.Intrinsic.Date.DateAdd("YYYY",-1,V.Ambient.Date,V.Global.dStartDate)
	Gui.frmCompareCost.dtp1.Value(V.Global.dStartDate)
	
	F.Intrinsic.Control.CallSub(SetContextMenus)
	
	Gui.frmCompareCost..Show
Program.Sub.Main.End

Program.Sub.frmCompareCost_UnLoad.Start
	F.Intrinsic.Control.If(V.DataTable.dtMain.Exists)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.End
Program.Sub.frmCompareCost_UnLoad.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmCompareCost..ContextMenuCreate("ctxCompareCost")
	Gui.frmCompareCost.GsGridControl1.ContextMenuAttach("ctxCompareCost")
	Gui.frmCompareCost..ContextMenuAddItem("ctxCompareCost","Refresh",0,"Refresh")
	Gui.frmCompareCost..ContextMenuAddItem("ctxCompareCost","Export",0,"Export")
	Gui.frmCompareCost..ContextMenuAddItem("ctxCompareCost","ResetColumns",0,"Reset Columns")
	Gui.frmCompareCost..ContextMenuSetItemEventHandler("ctxCompareCost","Refresh","MenuClickRefresh")
	Gui.frmCompareCost..ContextMenuSetItemEventHandler("ctxCompareCost","Export","MenuClickExport")
	Gui.frmCompareCost..ContextMenuSetItemEventHandler("ctxCompareCost","ResetColumns","MenuClickResetColumns")
	
	Gui.frmReceiptView..ContextMenuCreate("ctxReceipts")
	Gui.frmReceiptView.GsGridControl1.ContextMenuAttach("ctxReceipts")
	Gui.frmReceiptView..ContextMenuAddItem("ctxReceipts","Refresh",0,"Refresh")
	Gui.frmReceiptView..ContextMenuAddItem("ctxReceipts","Export",0,"Export")
	Gui.frmReceiptView..ContextMenuAddItem("ctxReceipts","ResetColumns",0,"Reset Columns")
	Gui.frmReceiptView..ContextMenuSetItemEventHandler("ctxReceipts","Refresh","MenuClickRefresh")
	Gui.frmReceiptView..ContextMenuSetItemEventHandler("ctxReceipts","Export","MenuClickExport")
	Gui.frmReceiptView..ContextMenuSetItemEventHandler("ctxReceipts","ResetColumns","MenuClickResetColumns")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXCOMPARECOST")
			F.Intrinsic.Control.CallSub(cmdLoadCompareCost_Click)
			
		F.Intrinsic.Control.Case("CTXRECEIPTS")
			F.Intrinsic.Control.CallSub(RefreshForm2)
	F.Intrinsic.Control.EndSelect
	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sForm.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXCOMPARECOST")
			V.Local.sForm.Set("frmCompareCost")
			V.Local.sControl.Set("GsGridControl1")
			
		F.Intrinsic.Control.Case("CTXRECEIPTS")
			V.Local.sForm.Set("frmReceiptView")
			V.Local.sControl.Set("GsGridControl1")
	F.Intrinsic.Control.EndSelect

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_5622_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_5622_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXCOMPARECOST")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVCOST",5622,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(cmdLoadCompareCost_Click)
			
		F.Intrinsic.Control.Case("CTXRECEIPTS")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVRECEIPT",5622,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(RefreshForm2)
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.cmdLoadCompareCost_Click.Start
	'Click Refresh
	Gui.frmCompareCost.cmdLoadCompareCost.Enabled(False)
	
	V.Global.dStartDate.Set(V.Screen.frmCompareCost!dtp1.Value)
	V.Global.dEndDate.Set(V.Screen.frmCompareCost!dtp2.Value)
	
	'Clear and build table
	F.Intrinsic.Control.CallSub(ClearAndCreateTable)
	
	'Store Valid Parts in V.Global.sValidParts
	F.Intrinsic.Control.CallSub(FindAndAddValidParts)
	F.Intrinsic.Control.CallSub(AddNewColumns)
	F.Intrinsic.Control.CallSub(FormatGV)
	
	Gui.frmCompareCost.cmdLoadCompareCost.Enabled(True)	
Program.Sub.cmdLoadCompareCost_Click.End

Program.Sub.ClearAndCreateTable.Start
	F.Intrinsic.Control.If(V.DataTable.dtMain.Exists)
		
		F.Intrinsic.Control.CallSub(Serialize)
		F.Data.DataTable.Close("dtMain")
	
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.Create("dtMain", True)
	F.Data.DataTable.AddColumn("dtMain", "Part", "string")
	F.Data.DataTable.AddColumn("dtMain", "Loc", "string")
	F.Data.DataTable.AddColumn("dtMain", "Description", "string")
	F.Data.DataTable.AddColumn("dtMain", "# of Receipts", "long")
	F.Data.DataTable.AddColumn("dtMain", "Qty Received", "float")
	F.Data.DataTable.AddColumn("dtMain", "Highest Cost", "float")
	F.Data.DataTable.AddColumn("dtMain", "Lowest Cost", "float")
	F.Data.DataTable.AddColumn("dtMain", "% Difference", "float")
	F.Data.DataTable.AddColumn("dtMain", "Sort Code", "string")
	F.Data.DataTable.AddColumn("dtMain", "Product Line", "string")
	F.Data.DataTable.AddColumn("dtMain", "On Hand", "float")
	F.Data.DataTable.AddColumn("dtMain", "Requirements", "float")
Program.Sub.ClearAndCreateTable.End

Program.Sub.FindAndAddValidParts.Start
	V.Local.sQuery.Declare(string)
	
	'Reformat Dates
	V.Local.sStart.Declare(string)
	V.Local.sEnd.Declare(string)
	f.Intrinsic.String.Format(V.Screen.frmCompareCost!dtp1.Value, "yyyy-mm-dd", V.Local.sStart)
	F.Intrinsic.String.Format(V.Screen.frmCompareCost!dtp2.Value, "yyyy-mm-dd", V.Local.sEnd)
	
	F.Intrinsic.String.Build("Select PART from V_PO_HISTORY where DATE_RECEIVED >= '{0}' and DATE_RECEIVED <= '{1}' and QTY_RECEIVED > 0", V.Local.sStart, V.Local.sEnd, V.Local.sQuery)
	F.ODBC.Connection!con.OpenRecordsetRO("rstValidity", V.Local.sQuery)
	
	F.Data.DataTable.Create("dtValidity", false)
	F.Data.DataTable.AddColumn("dtValidity", "Part", "string")
	F.Data.DataTable.AddColumn("dtValidity", "Count", "long")
	
	V.Global.sPart.Declare(string)
	V.Local.bIsInDT.Declare(boolean)
	V.Local.i.Declare(long)
	V.Local.iTemp.Declare(long)
	
	F.Intrinsic.Control.DoUntil(V.ODBC.con!rstValidity.EOF)
		
		F.ODBC.con!rstValidity.Record2String(V.Global.sPart)
		F.ODBC.con!rstValidity.MoveNext
		
		V.Local.bIsInDT.Set(false)
		F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtValidity.RowCount--,1)
			F.Intrinsic.Control.If(V.Global.sPart, =, V.DataTable.dtValidity(V.Local.i).Part!FIELDVAL)
				V.Local.bIsInDT.Set(True)
				F.Intrinsic.Math.Add(V.DataTable.dtValidity(V.Local.i).Count!FIELDVAL, 1, V.Local.iTemp)
				F.Data.DataTable.SetValue("dtValidity", V.Local.i, "Count", V.Local.iTemp)
				V.Local.i.Set(V.DataTable.dtValidity.RowCount)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.i)
		
		F.Intrinsic.Control.If(V.Local.bIsInDT, =, False)
			F.Data.DataTable.AddRow("dtValidity","Part",V.Global.sPart,"Count",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Loop
		
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtValidity.RowCount--, 1)
		F.Intrinsic.Control.If(V.DataTable.dtValidity(V.Local.i).Count!FIELDVAL, >, 1)
			V.Global.sPart.Set(V.DataTable.dtValidity(V.Local.i).Part!FIELDVAL)
			F.Intrinsic.Control.CallSub(AddValidPart)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	F.ODBC.con!rstValidity.Close
	
Program.Sub.FindAndAddValidParts.End

Program.Sub.AddValidPart.Start
	'Open recordset
	V.Local.sQuery.Declare(string)
	V.Local.sStart.Declare(string)
	V.Local.sEnd.Declare(string)
	V.Local.sStart.Set(V.Screen.frmCompareCost!dtp1.Value)
	V.Local.sEnd.Set(V.Screen.frmCompareCost!dtp2.Value)
'	f.Intrinsic.String.Format(V.Screen.frmCompareCost!dtp1.Value, "yyyy-mm-dd", V.Local.sStart)
'	F.Intrinsic.String.Format(V.Screen.frmCompareCost!dtp2.Value, "yyyy-mm-dd", V.Local.sEnd)
	F.Intrinsic.String.Build("Select LOCATION, DESCRIPTION, QTY_RECEIVED, COST from V_PO_HISTORY where Part = '{0}' and DATE_RECEIVED >= '{1}' and DATE_RECEIVED <= '{2}' and QTY_RECEIVED > 0", V.Global.sPart.PSQLFriendly, V.Local.sStart.PervasiveDate, V.Local.sEnd.PervasiveDate, V.Local.sQuery)
	F.ODBC.Connection!con.OpenRecordsetRo("rst", V.Local.sQuery)

	V.Local.sDetails.Declare(string)
	V.Local.fHighCost.Declare(float)
	V.Local.fLowCost.Declare(float)
	V.Local.fTemp.Declare(float)
	V.Local.fQtyReceived.Declare(float)
	V.Local.iCountOfReceipts.Declare(long)
	V.Local.fTotalReceived.Declare(float)
	V.Local.sLocation.Declare(string)
	V.Local.fDifference.Declare(float)
	V.Local.sDifference.Declare(string)
	V.Local.sDescription.Declare(string)
	
	F.Intrinsic.Control.DoUntil(V.ODBC.con!rst.EOF)
		F.ODBC.con!rst.Record2String(V.Local.sDetails)
		F.Intrinsic.String.Split(V.Local.sDetails, "*!*", V.Local.sDetails)
		
		F.Intrinsic.Math.ConvertToFloat(V.Local.sDetails(2), V.Local.fQtyReceived)
		
		F.Intrinsic.Math.ConvertToFloat(V.Local.sDetails(3), V.Local.fTemp)
		
		F.Intrinsic.Control.If(V.Local.fTemp, >, V.Local.fhighcost)
			V.Local.fhighcost.Set(V.Local.fTemp)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.fLowCost, =, 0)
			V.Local.fLowCost.Set(V.Local.fTemp)
		F.Intrinsic.Control.ElseIf(V.Local.fTemp, <, V.Local.fLowCost)
			V.Local.fLowCost.Set(V.Local.fTemp)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Math.Add(v.Local.iCountOfReceipts, 1, V.Local.iCountOfReceipts)
		
		F.Intrinsic.Math.Add(V.Local.fQtyReceived, V.Local.fTotalReceived, V.Local.fTotalReceived)
		
		F.ODBC.con!rst.MoveNext
	F.Intrinsic.Control.Loop
	
	V.Local.sLocation.Set(V.Local.sDetails(0))
	V.Local.sDescription.Set(V.Local.sDetails(1))
	
	F.Intrinsic.Control.If(V.Local.fHighCost, >, 0)
		F.Intrinsic.Math.Sub(V.Local.fhighcost, V.Local.fLowCost, V.Local.fdifference)
		F.Intrinsic.Math.Div(V.Local.fdifference, V.Local.fhighcost, V.Local.fdifference)
		F.Intrinsic.Math.Mult(V.Local.fdifference, 100, V.Local.fdifference)
		F.Intrinsic.Math.Round(V.Local.fDifference, 2, V.Local.fDifference)
	F.Intrinsic.Control.Else
		V.Local.fDifference.Set(0)
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.AddRow("dtMain", "Part", V.Global.sPart, "Loc", V.Local.sLocation, "Description", V.Local.sDescription, "# of Receipts", V.Local.iCountOfReceipts, "Qty Received", V.Local.fTotalReceived, "Highest Cost", V.Local.fHighCost, "Lowest Cost", V.Local.fLowCost, "% Difference", V.Local.fDifference)

	F.ODBC.con!rst.Close
	
Program.Sub.AddValidPart.End

Program.Sub.AddNewColumns.Start
	'Add Key
	F.Data.DataTable.AddExpressionColumn("dtMain","PartLocKey","string","Part+Loc")
	
	F.Data.DataTable.CreateFromSQL("dtNewColumns","con","Select Part+Location As PartLoc, Product_Line, Code_Sort As Sort_Code, Qty_OnHand, Qty_Required From V_Inventory_Mstr")
	
	'Sort Code
	F.Data.Dictionary.CreateFromDataTable("dicSC","dtNewColumns","PartLoc","Sort_Code")
	F.Data.Dictionary.SetDefaultReturn("dicSC","")
	F.Data.DataTable.FillFromDictionary("dtMain","dicSC","PartLocKey","Sort Code")
	F.Data.Dictionary.Close("dicSC")
	'Product Line
	F.Data.Dictionary.CreateFromDataTable("dicPL","dtNewColumns","PartLoc","Product_Line")
	F.Data.Dictionary.SetDefaultReturn("dicPL","")
	F.Data.DataTable.FillFromDictionary("dtMain","dicPL","PartLocKey","Product Line")
	F.Data.Dictionary.Close("dicPL")
	'On Hand
	F.Data.Dictionary.CreateFromDataTable("dicOH","dtNewColumns","PartLoc","Qty_OnHand")
	F.Data.Dictionary.SetDefaultReturn("dicOH",0)
	F.Data.DataTable.FillFromDictionary("dtMain","dicOH","PartLocKey","On Hand")
	F.Data.Dictionary.Close("dicOH")
	'Requirements
	F.Data.Dictionary.CreateFromDataTable("dicReq","dtNewColumns","PartLoc","Qty_Required")
	F.Data.Dictionary.SetDefaultReturn("dicReq",0)
	F.Data.DataTable.FillFromDictionary("dtMain","dicReq","PartLocKey","Requirements")
	F.Data.Dictionary.Close("dicReq")
	
	'Close DateTable
	F.Data.DataTable.Close("dtNewColumns")
	
	'Remove Key
	F.Data.DataTable.RemoveColumn("dtMain","PartLocKey")
Program.Sub.AddNewColumns.End

Program.Sub.FormatGV.Start
	Gui.frmCompareCost.GsGridControl1.AddGridviewFromDatatable("gvMain", "dtMain")
	
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Description", "Width", "200")
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Part", "Width", "100")
	
	Gui.frmCompareCost.GsGridControl1.SetGridViewProperty("gvMain","EnableAppearanceOddRow",True)
	
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Part", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Loc", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Description", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "# of Receipts", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Qty Received", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Highest Cost", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "Lowest Cost", "AllowEdit", False)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "% Difference", "AllowEdit", False)
	
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "# of Receipts", "CellForeColor", "Blue")
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "# of Receipts", "CellFontUnderline", True)
	Gui.frmCompareCost.GsGridControl1.SetColumnProperty("gvMain", "# of Receipts", "Caption", "# of Receipts")
	
	Gui.frmCompareCost.GsGridControl1.MainView("gvMain")

	F.Intrinsic.Control.CallSub(Deserialize)

Program.Sub.FormatGV.End

Program.Sub.GsGridControl1_RowCellClick1.Start
	F.Intrinsic.Control.If(V.Args.Column, =, "# of Receipts")
		
		Gui.frmReceiptView.dtp1.Value(V.Global.dStartDate)
		Gui.frmReceiptView.dtp2.Value(V.Global.dEndDate)
		V.Global.sPart.Set(V.DataTable.dtMain(V.Args.RowIndex).Part!FIELDVAL)
		V.Local.sLbl2.Declare(string)
		F.Intrinsic.String.Build("Receipt View || Part: {0}", V.Global.sPart, V.Local.sLbl2)
		Gui.frmReceiptView..Caption(V.Local.sLbl2)
		Gui.frmReceiptView..Visible(True)
		
		V.Global.dStartFormatted.Declare(string)
		V.Global.dEndFormatted.Declare(string)
		f.Intrinsic.String.Format(V.Global.dStartDate, "yyyy-mm-dd", V.Global.dStartFormatted)
		f.Intrinsic.String.Format(V.Global.dEndDate, "yyyy-mm-dd", V.Global.dEndFormatted)
		
		F.Intrinsic.Control.CallSub(LoadDTandGVForm2)	
		
	F.Intrinsic.Control.EndIf
Program.Sub.GsGridControl1_RowCellClick1.End

Program.Sub.LoadDTandGVForm2.Start
	V.Local.sQuery.Declare(string)
	
	F.Intrinsic.String.Build("Select VENDOR as Vendor, PURCHASE_ORDER as PO, PO_LINE as 'PO Line', LOCATION as Loc, UM_INVENTORY as UM, DATE_PO as 'Date of PO', DATE_REQ as 'Date Req', DATE_DUE as 'Date Due', DATE_RECEIVED as 'Date Recvd', COST as Cost, DISCOUNT as 'Discount', QTY_ORDER as 'Order Qty', QTY_RECEIVED as 'Qty Recvd' From V_PO_HISTORY where PART = '{0}' and DATE_RECEIVED >= '{1}' and DATE_RECEIVED <= '{2}' and QTY_RECEIVED > 0", V.Global.sPart, V.Global.dStartFormatted, V.Global.dEndFormatted, V.Local.sQuery)
	
	F.Data.DataTable.CreateFromSQL("dtSub", "con", V.Local.sQuery)
	
	Gui.frmReceiptView.GsGridControl1.AddGridviewFromDatatable("gvSub", "dtSub")

	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub", "UM", "MinWidth", "55")
	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub", "Loc", "MinWidth", "55")
	
	Gui.frmReceiptView.GsGridControl1.SetGridViewProperty("gvSub","EnableAppearanceOddRow",True)
	
	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub","Date of PO","DisplayCustomDateTime","d")	
	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub","Date Req","DisplayCustomDateTime","d")	
	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub","Date Due","DisplayCustomDateTime","d")	
	Gui.frmReceiptView.GsGridControl1.SetColumnProperty("gvSub","Date Recvd","DisplayCustomDateTime","d")	
	
	Gui.frmReceiptView.GsGridControl1.MainView("gvSub")	
	
	F.Intrinsic.Control.CallSub(DeserializeForm2)	
Program.Sub.LoadDTandGVForm2.End

Program.Sub.Serialize.Start
	V.Local.sSerialize.Declare(string)
	Gui.frmCompareCost.GsGridControl1.Serialize("gvMain", V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvMain", 5622, 1000, False, "Serialize", False,0,-999.0,1/1/1980,12:00:00 AM, V.Local.sSerialize)

Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	V.Local.sSerialize.Declare(string)
	F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvMain", 5622, 1000, 6,"", V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmCompareCost.GsGridControl1.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf

Program.Sub.Deserialize.End

Program.Sub.SerializeForm2.Start
	V.Local.sSerialize.Declare(string)
	Gui.frmReceiptView.GsGridControl1.Serialize("gvSub", V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvSub", 5622, 1000, False, "Serialize", False,0,-999.0,1/1/1980,12:00:00 AM, V.Local.sSerialize)

Program.Sub.SerializeForm2.End

Program.Sub.DeserializeForm2.Start
	V.Local.sSerialize.Declare(string)
	F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvSub", 5622, 1000, 6,"", V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmReceiptView.GsGridControl1.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf

Program.Sub.DeserializeForm2.End

Program.Sub.Form2_UnLoad.Start
	F.Intrinsic.Control.CallSub(SerializeForm2)
	Gui.frmReceiptView..Visible(False)
Program.Sub.Form2_UnLoad.End

Program.Sub.RefreshForm2.Start
	F.Intrinsic.Control.CallSub(LoadDTandGVForm2)
Program.Sub.RefreshForm2.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
${$5$}$2.0.0.0$}$2
${$6$}$Angel$}$20220401131120890$}$KXl0r/FkrMYwb/r4ukQ87aOTsTN7X2eac7wG8sXGODesUPQ+JegM8s7j3O/4C9KJV3TpezdKi+4=
Program.Sub.Comments.End